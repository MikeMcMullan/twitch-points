new Vue({el:"#bot-log",data:{refreshing_log:!1,starting_bot:!1,stopping_bot:!1,joining_channel:!1,leaving_channel:!1,bot_status:"Unknown",offset:0,entries:[],alerts:[]},computed:{},ready:function(){var t=this;t.fetchEntries();var e=function(){setTimeout(function(){t.fetchEntries(),e()},2e3)};e()},methods:{toggleProperty:function(t,e){var o=this,n=function(){o[t]=!o[t]};return e?void setTimeout(n,e):void n()},makeBotControlRequest:function(t,e){var o=this,n=$.ajax({url:t,method:"GET",dataType:"json",beforeSend:function(){o.toggleProperty(e)}});n.done(function(t){t.error&&(o.alerts.push({level:"danger",msg:t.error}),setTimeout(function(){o.alerts.pop()},2e3)),o.toggleProperty(e,4e3)})},fetchEntries:function(){var t=this,e=$.ajax({url:"/api/bot/log",method:"GET",data:{offset:this.offset},dataType:"json",beforeSend:function(){t.toggleProperty("refreshing_log")}});e.done(function(e){if(e.error)return t.entries=[e.error],void(t.bot_status="Error");t.offset=e.new_offset,t.bot_status=e.status;for(var o in e.entries)t.entries.unshift(e.entries[o]);t.toggleProperty("refreshing_log")})},startBot:function(){this.makeBotControlRequest("/api/bot/start","starting_bot")},stopBot:function(){this.makeBotControlRequest("/api/bot/stop","stopping_bot")},joinChannel:function(){this.makeBotControlRequest("/api/bot/join","joining_channel")},leaveChannel:function(){this.makeBotControlRequest("/api/bot/leave","leaving_channel")}}});